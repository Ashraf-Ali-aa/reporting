version: '3'

services:
  postgres:
    image: "qaprosoft/postgres:${TAG_POSTGRES}"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./database/:/docker-entrypoint-initdb.d
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
  rabbitmq:
    image: "qaprosoft/rabbitmq:${TAG_RABBITMQ}"
    ports:
      - 15672:15672
      - 61613:61613
      - 5672:5672
    volumes:
      - ./config/definitions.json:/etc/rabbitmq/definitions.json:ro
    environment:
      - RABBITMQ_DEFAULT_USER=qpsdemo
      - RABBITMQ_DEFAULT_PASS=qpsdemo
    restart: always
  redis:
    image: "redis:${TAG_REDIS}"
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    ports:
      - 6379:6379
    restart: always
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:${TAG_ELASTICSEARCH}"
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    restart: always
  logstash:
    image: "docker.elastic.co/logstash/logstash:${TAG_LOGSTASH}"
    volumes:
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./config/mapping.json:/mapping.json:ro
    restart: always
    depends_on:
      - elasticsearch
  reporting-service:
    image: "zebrunner/reporting-service:${TAG_REPORTING_SERVICE}"
    volumes:
      - ./assets:/opt/assets
    ports:
      - 8080:8080
    env_file:
      - properties.env
    depends_on:
      - postgres
      - rabbitmq
      - redis
    restart: always
  reporting-ui:
    image: "zebrunner/reporting-ui:${TAG_REPORTING_UI}"
    ports:
      - 80:80
    env_file:
      - properties.env
    depends_on:
      - reporting-service
