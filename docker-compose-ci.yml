version: '3'

services:
  db:
    image: qaprosoft/postgres:9.6
    volumes:
      - ./database/:/docker-entrypoint-initdb.d
    ports:
      - 5433:5432
    env_file:
      - integrations.env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
  rabbitmq:
    image: qaprosoft/rabbitmq:latest
    ports:
      - 15672:15672
      - 15674:15674
      - 5672:5672
    volumes:
      - ./config/definitions.json:/etc/rabbitmq/definitions.json:ro
    environment:
      - RABBITMQ_DEFAULT_USER=qpsdemo
      - RABBITMQ_DEFAULT_PASS=qpsdemo
    restart: always
  redis:
    image: redis:4.0.11
    ports:
      - 6379:6379
    restart: always
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    restart: always
  logstash:
    image: docker.elastic.co/logstash/logstash:6.3.1
    volumes:
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./config/mapping.json:/mapping.json:ro
    restart: always
    depends_on:
      - elasticsearch
  zafira:
    image: qaprosoft/zafira:latest
    ports:
      - 9000:8080
    env_file:
      - integrations.env
    environment:
      - ZAFIRA_USER=qpsdemo
      - ZAFIRA_PASS=qpsdemo
      - ZAFIRA_RABBITMQ_ENABLED=false
    depends_on:
      - "db"
      - "rabbitmq"
      - "redis"
      - "selenoid"
    restart: always
  selenoid:
    image: "aerokube/selenoid"
    network_mode: bridge
    ports:
      - "4444:4444"
    volumes:
      - "$PWD:/etc/selenoid/" # assumed current dir contains browsers.json
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: ["-conf", "/etc/selenoid/browsers.json", "-video-output-dir", "/opt/selenoid/video", "-listen", ":4444", "-service-startup-timeout", "5m0s", "-session-attempt-timeout", "5m0s", "-timeout", "3m0s", "-limit", "8"]
    restart: always
  selenoid-ui:
    image: "aerokube/selenoid-ui"
    network_mode: bridge
    links:
      - selenoid
    ports:
      - "8080:8080"
    command: ["--selenoid-uri", "http://selenoid:4444"]
    restart: always
